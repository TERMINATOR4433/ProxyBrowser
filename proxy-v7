<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Skynet</title>
    <style>
        /* Your existing styles */
    </style>
</head>
<body>
<div class="container">
    <div class="header">
        <div class="nav-links">
            <a href="#">Gmail</a>
            <a href="#">Images</a>
        </div>
    </div>
    <div class="logo-container">
        <div class="logo">
            <span>S</span>
            <span>k</span>
            <span>y</span>
            <span>n</span>
            <span>e</span>
            <span>t</span>
        </div>

        <div class="search-container">
            <div class="search-bar">
                <input type="text" id="url-input" placeholder="Enter URL to browse">
                <button onclick="loadPage()">Go</button>
            </div>
        </div>

        <div class="proxy-selector">
            <button onclick="setProxyMethod('allorigins')" class="active" id="allorigins-btn">AllOrigins</button>
            <button onclick="setProxyMethod('cors')" id="cors-btn">CORS Proxy</button>
            <button onclick="setProxyMethod('thingproxy')" id="thingproxy-btn">ThingProxy</button>
            <button onclick="setProxyMethod('customproxy')" id="customproxy-btn">Custom Proxy</button>
            <button onclick="openCustomLink()">Itch.io</button>
            <button onclick="setProxyMethod('iframe')" id="iframe-btn">Iframe</button>
        </div>
    </div>

    <iframe id="proxy-frame"></iframe>
</div>

<script>
    let currentProxyMethod = 'allorigins';

    function openCustomLink() {
        const url = "https://itch.io";
        window.open(`https://skynet-server.hib29713.workers.dev/index.js?url=${encodeURIComponent(url)}`);
    }

    function setProxyMethod(method) {
        ['allorigins', 'cors', 'thingproxy', 'customproxy', 'iframe'].forEach(m => {
            document.getElementById(`${m}-btn`).classList.remove('active');
        });
        document.getElementById(`${method}-btn`).classList.add('active');
        currentProxyMethod = method;
    }

    function loadPage() {
        const url = document.getElementById('url-input').value;
        const iframe = document.getElementById('proxy-frame');
        
        if (url) {
            let proxyUrl;
            switch(currentProxyMethod) {
                case 'allorigins':
                    proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(url)}`;
                    break;
                case 'cors':
                    proxyUrl = `https://cors-anywhere.herokuapp.com/${url}`;
                    break;
                case 'thingproxy':
                    proxyUrl = `https://thingproxy.freeboard.io/fetch/${encodeURIComponent(url)}`;
                    break;
                case 'customproxy':
                    proxyUrl = `https://skynet-server.hib29713.workers.dev/index.php?url=${encodeURIComponent(url)}`;
                    break;
                case 'iframe':
                    proxyUrl = url;
                    break;
            }

            iframe.src = proxyUrl;
            iframe.onload = () => {
                fetchExternalCSS(url);
            };
            iframe.classList.add('active');
        } else {
            alert("Please enter a URL.");
        }
    }

    function fetchExternalCSS(url) {
        // Fetch the HTML of the page
        fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`)
            .then(response => response.json())
            .then(data => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(data.contents, 'text/html');
                const links = doc.querySelectorAll('link[rel="stylesheet"]');

                links.forEach(link => {
                    const cssUrl = link.href;
                    const linkElement = document.createElement('link');
                    linkElement.rel = 'stylesheet';
                    linkElement.href = cssUrl;
                    document.head.appendChild(linkElement);
                });
            })
            .catch(err => console.error('Error fetching CSS:', err));
    }
</script>
</body>
</html>
